scale_y_log10() +
facet_wrap( iter_global ~ iter , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of processes")
#la figure "Rplot_process_iter_x_y.pdf"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(iter), y = best, fill = factor(iter)))
p + geom_boxplot(aes(fill = factor(iter))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ process , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of TSiteration")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
#  scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
instanceList <- c("0") ;
poolList <- c("1") ;
iterList <- c("1500") ;
processList <- c("20") ;
data <- data.frame();
for (process in processList) {
for (pool in poolList) {
for(instance in instanceList){
for(iter in iterList){
for( run in 13:13) {
#run <- 13
file <- paste("./1pool/",process,"p_",pool,"pool_",iter,"/global_results_TS_",instance,"_",run,sep="")
tmp <- read.csv(file, header = F, sep = " ")
colnames(tmp) <- c("best","temps","iter_global","iter_TS","perc_pool")
tmp$instance <- NA
tmp$pool <- NA
tmp$run <- NA
tmp$iter <- NA
tmp$process <- NA
tmp$instance <- instance
tmp$pool <- pool
tmp$run <- run
tmp$iter <- iter
tmp$process <- process
data <- rbind(data,tmp)
}
}
}
}
}
data$iter = as.numeric(data$iter)
##############################################@
library(ggplot2)
library(scales)
library("grid")
up <- function(x) {
result <- mean(x) + qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
down <- function(x) {
result <- mean(x) - qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
##############################################@
#la figure "process_iter_xgiter_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = process))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ iter , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
#la figure "iter_process_xgbest_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(iter)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ process , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
df <- data[data$iter_global %in% c(10,20,50,100) ,]
#la figure "Rplot_process_iter_xgiter_ybest"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(process), y = best, fill = process))
p + geom_boxplot(aes(fill = factor(process))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ iter , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of processes")
#la figure "Rplot_process_iter_x_y.pdf"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(iter), y = best, fill = factor(iter)))
p + geom_boxplot(aes(fill = factor(iter))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ process , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of TSiteration")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
#  scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
#  scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
instanceList <- c("0") ;
poolList <- c("1") ;
iterList <- c("1500") ;
processList <- c("20") ;
data <- data.frame();
for (process in processList) {
for (pool in poolList) {
for(instance in instanceList){
for(iter in iterList){
for( run in 1:20) {
#run <- 13
file <- paste("./1pool/",process,"p_",pool,"pool_",iter,"/global_results_TS_",instance,"_",run,sep="")
tmp <- read.csv(file, header = F, sep = " ")
colnames(tmp) <- c("best","temps","iter_global","iter_TS","perc_pool")
tmp$instance <- NA
tmp$pool <- NA
tmp$run <- NA
tmp$iter <- NA
tmp$process <- NA
tmp$instance <- instance
tmp$pool <- pool
tmp$run <- run
tmp$iter <- iter
tmp$process <- process
data <- rbind(data,tmp)
}
}
}
}
}
data$iter = as.numeric(data$iter)
##############################################@
library(ggplot2)
library(scales)
library("grid")
up <- function(x) {
result <- mean(x) + qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
down <- function(x) {
result <- mean(x) - qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
##############################################@
#la figure "process_iter_xgiter_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = process))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ iter , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
#la figure "iter_process_xgbest_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(iter)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ process , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
df <- data[data$iter_global %in% c(10,20,50,100) ,]
#la figure "Rplot_process_iter_xgiter_ybest"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(process), y = best, fill = process))
p + geom_boxplot(aes(fill = factor(process))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ iter , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of processes")
#la figure "Rplot_process_iter_x_y.pdf"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(iter), y = best, fill = factor(iter)))
p + geom_boxplot(aes(fill = factor(iter))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ process , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of TSiteration")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
#  scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(iter)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
#  scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3)
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ instance , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(process)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
#facet_wrap( ~ instance , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
#facet_wrap( ~ instance , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
best
instanceList <- c("0") ;
poolList <- c("1") ;
iterList <- c("1500") ;
processList <- c("20") ;
data <- data.frame();
for (process in processList) {
for (pool in poolList) {
for(instance in instanceList){
for(iter in iterList){
for( run in 1:20) {
#run <- 13
file <- paste("./0pool/",process,"p_",pool,"pool_",iter,"/global_results_TS_",instance,"_",run,sep="")
tmp <- read.csv(file, header = F, sep = " ")
colnames(tmp) <- c("best","temps","iter_global","iter_TS","perc_pool")
tmp$instance <- NA
tmp$pool <- NA
tmp$run <- NA
tmp$iter <- NA
tmp$process <- NA
tmp$instance <- instance
tmp$pool <- pool
tmp$run <- run
tmp$iter <- iter
tmp$process <- process
data <- rbind(data,tmp)
}
}
}
}
}
data$iter = as.numeric(data$iter)
##############################################@
library(ggplot2)
library(scales)
library("grid")
up <- function(x) {
result <- mean(x) + qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
down <- function(x) {
result <- mean(x) - qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
##############################################@
#la figure "process_iter_xgiter_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = process))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ iter , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
#la figure "iter_process_xgbest_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(iter)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ process , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
df <- data[data$iter_global %in% c(10,20,50,100) ,]
#la figure "Rplot_process_iter_xgiter_ybest"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(process), y = best, fill = process))
p + geom_boxplot(aes(fill = factor(process))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ iter , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of processes")
#la figure "Rplot_process_iter_x_y.pdf"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(iter), y = best, fill = factor(iter)))
p + geom_boxplot(aes(fill = factor(iter))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ process , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of TSiteration")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
#facet_wrap( ~ instance , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
instanceList <- c("0") ;
poolList <- c("0") ;
iterList <- c("") ;
processList <- c("20") ;
data <- data.frame();
for (process in processList) {
for (pool in poolList) {
for(instance in instanceList){
for(iter in iterList){
for( run in 1:20) {
#run <- 13
file <- paste("./T5/",process,"p_",pool,"pool_",iter,"/global_results_TS_",instance,"_",run,sep="")
tmp <- read.csv(file, header = F, sep = " ")
colnames(tmp) <- c("best","temps","iter_global","iter_TS","perc_pool")
tmp$instance <- NA
tmp$pool <- NA
tmp$run <- NA
tmp$iter <- NA
tmp$process <- NA
tmp$instance <- instance
tmp$pool <- pool
tmp$run <- run
tmp$iter <- iter
tmp$process <- process
data <- rbind(data,tmp)
}
}
}
}
}
data$iter = as.numeric(data$iter)
##############################################@
library(ggplot2)
library(scales)
library("grid")
up <- function(x) {
result <- mean(x) + qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
down <- function(x) {
result <- mean(x) - qnorm(0.975)*sd(x)/sqrt(length(x))
return(result)
}
##############################################@
#la figure "process_iter_xgiter_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = process))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ iter , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
#la figure "iter_process_xgbest_ybest.pdf"
pdf(filepdf, width=5, height = 5)
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best, colour = factor(iter)))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
facet_wrap( ~ process , scales="free",ncol=3)+
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
df <- data[data$iter_global %in% c(10,20,50,100) ,]
#la figure "Rplot_process_iter_xgiter_ybest"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(process), y = best, fill = process))
p + geom_boxplot(aes(fill = factor(process))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ iter , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of processes")
#la figure "Rplot_process_iter_x_y.pdf"
pdf(filepdf, width=5, height = 8)
p <- ggplot(df, aes(x = factor(iter), y = best, fill = factor(iter)))
p + geom_boxplot(aes(fill = factor(iter))) +
theme_bw() +
scale_y_log10() +
facet_wrap( iter_global ~ process , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Number of TSiteration")
p <- ggplot(data[data$run <=10,], aes(x = iter_global, y = best))
p + stat_summary(fun.y=mean, geom="line",size = 2, position=position_dodge(0.0)) +
stat_summary(fun.y=mean, geom="point",size = 0.5, position=position_dodge(0.0)) +
stat_summary(aes(width=0.01), fun.y=mean,fun.ymin=down, fun.ymax=up, geom="errorbar",size = 0.05, position=position_dodge(0.0)) +
scale_x_log10() +
scale_y_log10() +
theme_bw() +
#facet_wrap( ~ instance , scales="free",ncol=3) +
theme(legend.position="bottom") +
ylab("Best deviation") + xlab("Global iterations")
#facet_grid( ~ instance , scales="free")
instanceList <- c("0") ;
poolList <- c("0") ;
iterList <- c("") ;
processList <- c("20") ;
data <- data.frame();
for (process in processList) {
for (pool in poolList) {
for(instance in instanceList){
for(iter in iterList){
for( run in 1:20) {
#run <- 13
file <- paste("./T5/",process,"p_",pool,"pool_",iter,"/global_results_TS_",instance,"_",run,sep="")
tmp <- read.csv(file, header = F, sep = " ")
colnames(tmp) <- c("best","temps","iter_global","iter_TS","perc_pool")
tmp$instance <- NA
tmp$pool <- NA
tmp$run <- NA
tmp$iter <- NA
tmp$process <- NA
tmp$instance <- instance
tmp$pool <- pool
tmp$run <- run
tmp$iter <- iter
tmp$process <- process
data <- rbind(data,tmp)
}
}
}
}
}
View(tmp)
View(p)
View(tmp)
